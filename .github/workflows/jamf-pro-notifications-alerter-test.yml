name: Test - Jamf Pro Notifications Alerter

on:
  workflow_dispatch:
#   schedule:
#     - cron: '00 12 * * 1'

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # STEP 1-b: Checkout code from Jamf-Management repository to access central org URL list
      - name: Checkout code from Jamf-Management repository
        uses: actions/checkout@v3
        with:
          repository: advisoryteam/Jamf-Management
          ref: main
          path: ./Jamf-Management
          token: ${{ secrets.ACCESS_TOKEN_MAIN }}

      - name: Set up JQ
        run: sudo apt-get install jq
      
      - name: Set Matrix
        id: set-matrix
        run: |

          JSON_FILE='./Jamf-Management/Managed Organizations/managed-organizations.json'
          json_body=$(cat "$JSON_FILE")
          
          # Use jq to extract the "url" values and format as a JSON array
          organizations_json=$(echo "$json_body" | jq -c '{urls: [.organizations[].url]}')
          
          # Now, 'organizations_json' is a JSON-formatted string of the URLs
          echo "$organizations_json"
          
          # Set the output for the matrix
          echo "::set-output name=matrix::$organizations_json"
    
  run-script:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Notifications
        run: bash scripts/jamf-pro-notifications-alerter.sh --url ${{ matrix.urls }} --username ${{ secrets.API_USER }} --password ${{ secrets.API_PASS }}

        