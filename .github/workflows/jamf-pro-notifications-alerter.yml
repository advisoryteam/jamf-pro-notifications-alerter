name: Prod - Jamf Pro Notifications Alerter

on:
  workflow_dispatch:
  schedule:
    - cron: '0 13 * * 1'  # Runs every Monday at 1 PM UTC (8 AM EST)
    - cron: '0 13 * * 4'  # Runs every Thursday at 1 PM UTC (8 AM EST)


jobs:  # Generate the matrix
  generate-matrix:
    runs-on: self-hosted
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Check out code from Jamf-Management repository
        uses: actions/checkout@v4
        with:
          repository: advisoryteam/Jamf-Management
          ref: main
          path: ./Jamf-Management
          token: ${{ secrets.ACCESS_TOKEN_MAIN }}
        # Configure settings for the matrix
      - name: Set matrix
        id: set-matrix
        run: |

          # Path to JSON-formatted managed orgs list in Jamf-Management repository
          MANAGED_ORGS_JSON_FILE_PATH='./Jamf-Management/Managed Organizations/managed-organizations.json'

          # JSON-formatted managed orgs list contents
          MANAGED_ORGS_JSON_FILE_CONTENTS=$(cat "$MANAGED_ORGS_JSON_FILE_PATH")
          
          # Use jq to extract the "url" values and format as a JSON array
          MANAGED_ORGS_JAMF_URLS=$(echo "${MANAGED_ORGS_JSON_FILE_CONTENTS}" | jq -c '{urls: [.organizations[].url]}')
          
          # Now, 'MANAGED_ORGS_JAMF_URLS' is a JSON-formatted string of the URLs
          echo "${MANAGED_ORGS_JAMF_URLS}"

          # Set the output for the matrix
          echo "::set-output name=matrix::$MANAGED_ORGS_JAMF_URLS"
    
  run-script:
    needs: generate-matrix
    runs-on: self-hosted
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Notifications
        run: bash scripts/jamf-pro-notifications-alerter.sh --url ${{ matrix.urls }} --username ${{ secrets.API_USER }} --password ${{ secrets.API_PASS }} --slack-webhook ${{ secrets.JAMF_SERVER_NOTIFS_SLACK_WEBHOOK }}
